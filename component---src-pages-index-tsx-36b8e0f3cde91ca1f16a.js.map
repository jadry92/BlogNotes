{"version":3,"file":"component---src-pages-index-tsx-36b8e0f3cde91ca1f16a.js","mappings":"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","sources":["webpack://blog/./src/components/BlogCard/index.tsx","webpack://blog/./src/components/Footer/index.tsx","webpack://blog/./src/components/ProjectCard/index.tsx","webpack://blog/./src/components/ProjectsLayout/index.tsx","webpack://blog/./src/components/HomeLayout/index.tsx","webpack://blog/./src/components/LatesPublication/index.tsx","webpack://blog/./src/pages/index.tsx","webpack://blog/./src/utils/serializers.ts"],"sourcesContent":["import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { progressSerializer, createURL, thumbnailPath } from '../../utils/serializers'\nimport { StaticImage } from \"gatsby-plugin-image\"\n\ninterface IProps {\n  blog: {\n    title: string;\n    date: string;\n    description: string;\n    folder: string;\n    progress: number;\n    thumbnail: string;\n  }\n}\n\nconst BlogCard = ({ blog }: IProps) => { \n  const image = '../../../static/images/JavaScript_logo_2.png'\n  const progressObj =  progressSerializer(blog.progress)\n\n  return (\n    <div className=\"card mb-3 bg-color-3 px-1 text-white\" >\n      <div className=\"row\">\n        <div className=\"col-md-4 col-12 d-flex justify-content-center\">\n          <StaticImage \n            width={130}\n            height={130}\n            placeholder=\"blurred\"\n            src={image} \n            alt=\"blogImage\"\n            className='align-self-center m-5'\n          />\n        </div>\n        <div className=\"col-md-8 col-15\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-center\">{blog.title}</h5>\n            <p className=\"card-text\">{blog.description}</p>\n            <p className=\"card-text\"><small className=\"text-white-50\">{blog.date}</small></p>\n            <div className=\"d-flex justify-content-end\">\n              <span className={`align-self-end badge rounded-pill ${progressObj.color}`}>{progressObj.wLevel}</span>\n            </div>\n            <Link className='stretched-link' to={createURL(blog.folder, blog.title)}></Link>\n          </div>\n        </div>\n      </div>\n    </div>  \n  )\n}\n\nexport default BlogCard","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () : JSX.Element => {\n  return (\n    <footer className='footer mt-auto py-3 bg-color-4'>\n      <div className=\"container\">\n        <div className=\"text-light\">\n          <p> Contact me on <a href=\"https://www.linkedin.com/in/johan-suarez-largo-a9980499/\">Linkedin</a> and <a href=\"mailto:johan@blognotes.dev\">mail</a></p>\n        </div>\n        <div className=\"text-light\">\n          <p> You can find my thoughts <Link to='/blog'>Blog</Link></p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport { Link } from 'gatsby';\nimport { progressSerializer } from '../../utils/serializers'\n\ninterface IProject {\n  title : string;\n  description : string;\n  imageURL: string;\n  id: string;\n  slug : string;\n  folder: string;\n  progress: number;\n}\n\nconst ProjectCard = ({ project }: { project : IProject }) => {\n  \n  const createURL = (folder: string, title: string): string => {\n    return `/${folder}/${title.replace(/ /g,'-')}`\n  } \n\n  const progressObj =  progressSerializer(project.progress)\n  \n  return (\n    <div className=\"col-sm-12 col-md-6\">\n      <div className=\"card mb-5 mx-4 rounded bg-color-3\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-center text-white\">{project.title}</h5>\n          <p className=\"card-text text-white\">{project.description}</p>\n          <Link className='stretched-link' to={createURL(project.folder, project.title)}></Link>\n          <div className=\"progress\">\n            <div className={`progress-bar ${progressObj.color}`} \n            role=\"progressbar\" aria-valuenow={progressObj.nLevel} \n            aria-valuemin={0} aria-valuemax={100} \n            style={{ width: `${progressObj.progress}%` }}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectCard","import React from 'react'\nimport \"./styles.scss\"\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport { progressSerializer } from '../../utils/serializers'\nimport ProjectCard from '../ProjectCard';\nimport { count } from 'console';\n\ninterface INode {\n  id: string;\n  slug : string;\n  frontmatter : {\n    description : string;\n    title : string;\n    folder : string;\n    progress : number; \n  }\n}\n\ninterface IProps {\n  numberOfProjects: number | undefined\n}\n\nconst ProjectsLayout = ({ numberOfProjects }: IProps) => {\n \n  const data = useStaticQuery(graphql`\n    query GET_ALL_PROJECTS_HOME {\n      allMdx(\n        filter: {frontmatter: {folder: {eq: \"projects\"}, published: {eq: true}}}\n        sort: {fields: frontmatter___levelImportance, order: ASC}\n        ) {\n        nodes {\n          slug\n          id\n          frontmatter {\n            description\n            title\n            folder\n            progress\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"row\">\n      {data.allMdx.nodes.map( ( node: INode ) => {\n        const project = {\n          title : node.frontmatter.title, \n          description : node.frontmatter.description,\n          imageURL: '',\n          id: node.id,\n          slug : node.slug,\n          folder: node.frontmatter.folder,\n          progress: node.frontmatter.progress,\n        }\n\n        return <ProjectCard key={project.id} project={project} />\n      }).slice(0,numberOfProjects)}\n    </div>\n  )\n}\n\nexport default ProjectsLayout ","import React from 'react'\nimport './styles.scss'\ninterface IProps {\n  children : React.ReactNode;\n}\n\nconst HomeLayout = ({children} : IProps) => {\n  return (\n    <section className='bg-color-3 text-white'>\n      {children}\n    </section>\n  )\n}\n\nexport default HomeLayout","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport BlogCard from '../BlogCard';\n\nconst LatesPublication = () => {\n  \n  const data = useStaticQuery(graphql`\n  query GET_LAST_POST {\n    allMdx(\n      filter: {frontmatter: {folder: {eq: \"blog\"}, published: {eq: true}}}\n      sort: {fields: frontmatter___date, order: DESC}\n      limit: 1\n      ) {\n      nodes {\n        slug\n        id\n        frontmatter {\n          description\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          folder\n          progress\n          thumbnail\n        }\n      }\n    }\n  }\n  `)\n  const lastBlog = {\n    title: data.allMdx.nodes[0].frontmatter.title,\n    date: data.allMdx.nodes[0].frontmatter.date,\n    description: data.allMdx.nodes[0].frontmatter.description,\n    folder: data.allMdx.nodes[0].frontmatter.folder,\n    progress: data.allMdx.nodes[0].frontmatter.progress,\n    thumbnail: data.allMdx.nodes[0].frontmatter.thumbnail\n  }\n\n  return (\n    <div className=\"w-75\">\n      <BlogCard blog={lastBlog}/>\n    </div>\n  )\n}\n\nexport default LatesPublication","import React from \"react\"\n\nimport HomeLayout from \"../components/HomeLayout\"\nimport ProjectsLayout from \"../components/ProjectsLayout\"\nimport Footer from \"../components/Footer\"\nimport LatesPublication from \"../components/LatesPublication\"\n\n\ninterface IProps {\n  data : []\n}\n\nconst Home = ({ data } : IProps ) => {\n\n  return (\n    <HomeLayout>\n      <div className=\"container-fluid my-vh-90\">\n        <div className=\"row h-50 align-content-center\">\n          <div className=\"col text-center\">\n            <h1 className=\"display-1\"> Welcome to <strong className=\"blog-title\">BlogNotes.dev</strong></h1>\n          </div>\n        </div>\n        <div className=\"row h-50 align-content-center mx-3\">\n          <div className=\"col-12\">\n            <h2 className=\"display-4\">\n              Hi!, I'm Johan. \n            </h2>\n          </div>\n          <div className=\"col-12\">\n            <p className=\"h3\">\n              I'm a geek passionate about technology and in love with science. \n              I studied a bachelor of science and electronics engineering, \n              when I developed a huge interest in processors and software.\n              This site is been migrated to Gatsby at the moment :)\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row bg-color-2\">\n          <div className=\"col-12 my-3\">\n            <h2 className=\"ps-4\">Projects:</h2>\n          </div>\n        </div>\n        <div className=\"row bg-color-2\">\n          <ProjectsLayout numberOfProjects={4}/>\n        </div>\n      </div>\n\n\n      <div className=\"container-fluid bg-color-5\">\n        <div className=\"row\">\n          <div className=\"col-12 my-3\">\n            <h2 className=\"ps-4\">Lates Publication:</h2>\n          </div>\n        </div>\n        <div className=\"row d-flex justify-content-center\">\n          <LatesPublication />\n        </div>\n      </div>\n\n      <Footer/>\n\n    </HomeLayout>\n  )\n}\n\nexport default Home\n","\ninterface progressReturn {\n  color : string;\n  nLevel : number;\n  wLevel: string;\n  progress: number;\n}\n\nfunction progressSerializer(progress: number): progressReturn {\n\n  let respond = {\n    color : '',\n    nLevel : 0,\n    wLevel: '',\n    progress: 0,\n  }\n\n  if (progress >= 0  && progress < 25) {\n    respond.color = 'bg-secondary'\n    respond.nLevel = 0\n    respond.wLevel = 'raw'\n    respond.progress = progress\n  } else if (progress >= 25  && progress < 50) {\n    respond.color = 'bg-danger'\n    respond.nLevel = 25\n    respond.wLevel = 'basic'\n    respond.progress = progress\n  } else if (progress >= 50  && progress < 75) {\n    respond.color = 'bg-warning'\n    respond.nLevel = 50\n    respond.wLevel = 'middle'\n    respond.progress = progress\n  } else if (progress >= 75  && progress < 100) {\n    respond.color = 'bg-primary'\n    respond.nLevel = 75\n    respond.wLevel = 'advance'\n    respond.progress = progress\n  } else if (progress === 100) {\n    respond.color = 'bg-success'\n    respond.nLevel = 100\n    respond.wLevel = 'done'\n    respond.progress = progress\n  }\n\n\n  return respond\n}\n\nfunction createURL(folder: string, title: string): string {\n  return `/${folder}/${title.replace(/ /g,'-')}`\n} \n\nfunction thumbnailPath(name: string ): string {\n  let respond = ''\n  if (name === 'js') {\n    respond = '../../../static/images/JavaScript_logo_2.png'\n  } else if ( name === 'python') {\n    respond = '../../../static/images/logoBn.png'\n  }\n  return respond\n}\n\nexport { progressSerializer, createURL, thumbnailPath }"],"names":["blog","progressObj","progressSerializer","progress","React","className","StaticImage","width","height","placeholder","src","alt","title","description","date","color","wLevel","Link","to","createURL","folder","href","project","replace","role","nLevel","style","numberOfProjects","data","useStaticQuery","allMdx","nodes","map","node","frontmatter","imageURL","id","slug","ProjectCard","key","slice","children","lastBlog","thumbnail","BlogCard","HomeLayout","ProjectsLayout","LatesPublication","Footer","respond"],"sourceRoot":""}