{"version":3,"file":"component---src-pages-blog-index-tsx-f8a9477200337dcedd4b.js","mappings":"yHAkBA,IAfe,WACb,OACEA,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,kCAChBD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,IAAAA,KAAAA,kBAAkBA,EAAAA,cAAAA,IAAAA,CAAGE,KAAK,4DAAR,YAAlB,QAAsGF,EAAAA,cAAAA,IAAAA,CAAGE,KAAK,8BAAR,UAExGF,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,IAAAA,KAAAA,6BAA6BA,EAAAA,cAACG,EAAAA,GAAD,CAAMC,GAAG,SAAT,c,oGCSvC,EAbe,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YACf,OACEL,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gCACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mBACbD,EAAAA,cAACG,EAAAA,GAAD,CAAMC,GAAIC,EAAaJ,UAAU,gBAAjC,iBACAD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,UACdD,EAAAA,cAAAA,QAAAA,CAAOC,UAAU,oBAAoBK,KAAK,SAASC,YAAY,SAAS,aAAW,eCY7F,EAjBmB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SACnB,OACER,EAAAA,cAAAA,UAAAA,CAASC,UAAU,6BACjBD,EAAAA,cAACS,EAAD,CAAQJ,YAAY,UACpBL,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,aACdD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wBACbD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,MAAb,SAEFD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACZO,IAGLR,EAAAA,cAACU,EAAAA,EAAD,QCyDN,EAnCiB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAMlB,OACEX,EAAAA,cAACY,EAAD,KAEID,EAAKE,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACpBhB,EAAAA,cAAAA,MAAAA,CAAKiB,IAAKD,EAAKE,GAAIjB,UAAU,aAC3BD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,cAAAA,MAAAA,CAAKmB,IAAI,GAAGlB,UAAU,0BAA0BmB,IAAI,SAEtDpB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,cAAce,EAAKK,YAAYC,OAC7CtB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,aAAae,EAAKK,YAAYE,aAC3CvB,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,aAAYD,EAAAA,cAAAA,QAAAA,CAAOC,UAAU,cAAce,EAAKK,YAAYG,OACzExB,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,iCAAiCe,EAAKK,YAAYG,MAClExB,EAAAA,cAACG,EAAAA,GAAD,CAAMF,UAAU,iBAAiBG,IAnB9BqB,EAmB4CT,EAAKK,YAAYI,OAnB7CH,EAmBqDN,EAAKK,YAAYC,MAlBjG,IAAKG,EAAX,IAAqBH,EAAMI,QAAQ,KAAK,UAqB9B1B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gDACXD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,0BAA0B,aAvBrC,IAACwB,EAAgBH","sources":["webpack://blog/./src/components/Footer/index.tsx","webpack://blog/./src/components/Navbar/index.tsx","webpack://blog/./src/components/BlogLayout/index.tsx","webpack://blog/./src/pages/blog/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () : JSX.Element => {\n  return (\n    <footer className='footer mt-auto py-3 bg-color-4'>\n      <div className=\"container\">\n        <div className=\"text-light\">\n          <p> Contact me on <a href=\"https://www.linkedin.com/in/johan-suarez-largo-a9980499/\">Linkedin</a> and <a href=\"mailto:johan@blognotes.dev\">mail</a></p>\n        </div>\n        <div className=\"text-light\">\n          <p> You can find my thoughts <Link to='/blog'>Blog</Link></p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import { Link } from 'gatsby'\nimport React from 'react'\n\ninterface IProps {\n  urlRedirect : string;\n}\n\nconst Navbar = ({urlRedirect} : IProps) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <Link to={urlRedirect} className=\"navbar-brand\">BlogNotes.dev</Link>\n        <form className=\"d-flex\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        </form>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar","import React from 'react'\nimport Footer from '../Footer'\nimport Navbar from '../Navbar'\n\ninterface IProps {\n  children: React.ReactChild | React.ReactChild[] | JSX.Element[]\n}\n\nconst BlogLayout = ({children} : IProps) => {\n  return (\n    <section className=\"d-flex flex-column vh-100\">\n      <Navbar urlRedirect='/blog'/>\n      <main className='container'>\n        <div className='row text-center my-4'>\n          <p className='h1'>Blog</p>\n        </div>\n        <div className=\"container\">\n          {children}\n        </div>        \n      </main>\n      <Footer/>\n    </section>\n  )\n}\n\nexport default BlogLayout","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport BlogLayout from '../../components/BlogLayout';\n\nexport const query = graphql`\n  query GET_ALL_POSTS {\n    allMdx(\n      filter: {frontmatter: {folder: {eq: \"blog\"}, published: {eq: true}}}\n      sort: {fields: frontmatter___date, order: DESC}\n      ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n          folder\n          progress\n        }\n        slug\n        id\n      }\n    }\n  }\n`\n\ninterface Inode {\n  id : string;\n  frontmatter : { \n    title: string;\n    date: string;\n    description: string;\n    folder: string;\n  }\n}\n\ninterface IData {\n  allMdx : { \n    nodes : Inode[];\n  }\n}\n\n\nconst BlogPage = ({ data } : {data : IData}) => {\n  \n  const createURL = (folder: string, title: string): string => {\n    return `/${folder}/${title.replace(/ /g,'-')}`\n  } \n\n  return (\n    <BlogLayout>\n      {\n        data.allMdx.nodes.map((node) => (   \n          <div key={node.id} className=\"card mb-3\" >\n            <div className=\"row g-0\">\n              <div className=\"col-md-4 col-3\">\n                <img src=\"\" className=\"img-fluid rounded-start\" alt=\"...\"/>\n              </div>\n              <div className=\"col-md-7 col-8\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{node.frontmatter.title}</h5>\n                  <p className=\"card-text\">{node.frontmatter.description}</p>\n                  <p className=\"card-text\"><small className=\"text-muted\">{node.frontmatter.date}</small></p>\n                  <span className=\"badge rounded-pill bg-warning\">{node.frontmatter.date}</span>\n                  <Link className='stretched-link' to={createURL(node.frontmatter.folder, node.frontmatter.title)}></Link>\n                </div>\n              </div>\n              <div className=\"col-md-1 col-1 d-flex justify-content-center\">\n                  <p className=\"align-self-center mb-0\">{'-->'}</p>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </BlogLayout>\n  )\n}\n\nexport default BlogPage"],"names":["React","className","href","Link","to","urlRedirect","type","placeholder","children","Navbar","Footer","data","BlogLayout","allMdx","nodes","map","node","key","id","src","alt","frontmatter","title","description","date","folder","replace"],"sourceRoot":""}