{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/projects/Auto-Reference-Project",
    "result": {"pageContext":{"slug":"projects/AutoReference/AutoReference","id":"e14e6a49-957f-5115-b869-1e2611819e47","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Auto Reference Project\",\n  \"date\": \"2019-11-27T00:00:00.000Z\",\n  \"description\": \"This is an Desktop Application to create automatic reference from web pages on APA format\",\n  \"folder\": \"projects\",\n  \"published\": true,\n  \"progress\": 45,\n  \"levelImportance\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Auto References\"), mdx(\"p\", null, \"This is an Desktop APP which helps to create reference of Web Pages on APA format. This APP is build on Electron JS and React JS. Also, it's fully written on TypeScript.\"), mdx(\"p\", null, \"App Stack:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React JS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Electron JS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jest\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TypeScript\")), mdx(\"h2\", null, \"Usability\"), mdx(\"p\", null, \"The interface is very simple, a textarea for de links and two buttons \\\"generate\\\" and \\\"clear\\\".\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"./step-1.png\",\n    \"alt\": \"Step 1\"\n  })), mdx(\"p\", null, \"The first step is paste it all the links box\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"./step-3.png\",\n    \"alt\": \"Step 2\"\n  })), mdx(\"p\", null, \"Then, the generate the references:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"./step-2.png\",\n    \"alt\": \"Step 3\"\n  })), mdx(\"p\", null, \"The app will scraping the necessary to generate reference from the more common web pages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikipedia\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Youtube\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StackOverflow\")), mdx(\"p\", null, \"Use the \\\"Copy\\\" button to copy clipboard the references.\"), mdx(\"h2\", null, \"Installation process\"), mdx(\"p\", null, \"To use the application locally you should follow the next steps:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git clone git@github.com:jadry92/Auto-references.git\\nnpm install .\\nnpm run start\\n\")), mdx(\"h2\", null, \"Testing\"), mdx(\"p\", null, \"If you are improving the application you can run the unit test using the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm run test\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"November 27, 2019","title":"Auto Reference Project","folder":"projects"}}},
    "staticQueryHashes": []}