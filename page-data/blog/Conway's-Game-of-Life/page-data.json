{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/Conway's-Game-of-Life",
    "result": {"pageContext":{"slug":"notes/2020-05-27-game-life/game-life","id":"9f9c70fd-33f3-5588-b6a0-e08959c82aee","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Conway's Game of Life\",\n  \"date\": \"2020-05-27T00:00:00.000Z\",\n  \"description\": \"implementation of Conway's Game of Life in P5.js\",\n  \"folder\": \"blog\",\n  \"published\": true,\n  \"progress\": 100,\n  \"thumbnail\": \"js\",\n  \"tags\": [\"JS\", \"Javascript\", \"P5.js\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A few days ago, I saw this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=qPtKv9fSHZY\"\n  }, \"video\"), \"\\n\\\"it's in Spanish\\\" about \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Game of Life Conway\"), \" which show this idea of a simple\\n\\\"game\\\" created by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/John_Horton_Conway\"\n  }, \"John Horton Conway\"), \".\\nWhich simulate a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Cellular_automaton\"\n  }, \"cellular automaton\"), \".\"), mdx(\"p\", null, \"To me, this is not a usual game because there is no way to win or end goal.\\nAnd it doesn't need any player.\\nI would say it's a simulation of a grid life.\\nThe idea of this simulation is to have a grid \\\"2D matrix\\\" with cells of\\n1s and 0s. Where a cell with one means alive and a cell with zero means\\ndead. Then, apply two simples rules in the grid to calculate a\\nnew grid in the next time frame:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Rule 1:\"), \": if the cell is dead and there are three cells a life close, will be revived\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Rule 2:\"), \": if the cell is alive and there are less than two or more than three cells alive, will be died\")), mdx(\"p\", null, \"But the amazing fact of this game is that represents a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Turing_machine\"\n  }, \"turing machine\"), \".\"), mdx(\"p\", null, \"In the tutorial, he creates a python solution of the game using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.pygame.org\"\n  }, \"pygame\"), \". I followed the video and replicate my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jadry92/conway-s-game-of-the-life\"\n  }, \"version\"), \". But I decided to go forward and create an implementation in javascript to embed in a web page.\"), mdx(Sketch, {\n    mdxType: \"Sketch\"\n  }), mdx(\"p\", null, \"Both implementations are in this GitHub \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jadry92/conway-s-game-of-the-life\"\n  }, \"repository\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"May 27, 2020","title":"Conway's Game of Life","folder":"blog"}}},
    "staticQueryHashes": []}