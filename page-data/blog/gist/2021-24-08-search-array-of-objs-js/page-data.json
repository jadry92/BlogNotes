{
    "componentChunkName": "component---src-pages-blog-mdx-slug-tsx",
    "path": "/blog/gist/2021-24-08-search-array-of-objs-js/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Search in a Array of Objects javascript","date":"August 15, 2019"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Search in a Array of Objects javascript\",\n  \"date\": \"2019-08-15T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const obj1 = {\\n    name = 'johan',\\n    age= '29',\\n}\\nconst obj2 = {\\n    name = 'peter',\\n    age= '20',\\n}\\nconst arrayOfObjects = [obj1, obj2];\\n\\nconst index = arrayOfObjects.findIndex((obj) => obj.name === 'johan')\\n\\nconsole.log(arrayOfObjects[index].name)\\n// output : 'johan'\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let data = {\\n  12: {\\n    name: 'johan',\\n    age: '29',\\n  },\\n  40: {\\n    name: 'sebas',\\n    age: '15',\\n  },\\n};\\n\\nlet updateRow = {\\n  name: 'ronca',\\n  age: '56',\\n};\\n\\nconst index = '40';\\n\\nif (Object.keys(data).includes(index)) {\\n  Object.keys(data[index]).map(\\n    (key) =>\\n      data[index][key] != updateRow[key] && (data[index][key] = updateRow[key])\\n  );\\n}\\n\\nconsole.log(data);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let data = {\\n  12: {\\n    name: 'johan',\\n    age: '29',\\n  },\\n  40: {\\n    name: 'sebas',\\n    age: '15',\\n  },\\n};\\nlet data2 = {};\\nconst index = '20';\\n\\nconsole.log(!Object.keys(data2).includes(index));\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"8e123c13-8049-5184-b935-525649a56a25","slug":"gist/2021-24-08-search-array-of-objs-js","__params":{"slug":"gist"}}},
    "staticQueryHashes": []}