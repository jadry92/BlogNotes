{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/How-to-find-the-best-price-in-tech-gadgets-in-Australia's-retail-stores",
    "result": {"pageContext":{"slug":"ideas/2019-08-22-Best-price-tech-Australia/Best-price-tech-Australia","id":"8fd40341-8770-55ea-bdda-661458aa7589","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to find the best price in tech gadgets in Australia's retail stores\",\n  \"date\": \"2019-08-22T00:00:00.000Z\",\n  \"description\": \"Solving Tangram with genetic algorithm\",\n  \"folder\": \"blog\",\n  \"published\": true,\n  \"progress\": 100,\n  \"thumbnail\": \"python\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All my life I've been passionate about technology, every time that I see a new\\ngadget I ask myself \\\"how does it work?\\\", \\\"Why this designed?\\\", \\\"Why is it so\\nexpensive?\\\". But more of the times I've just watched these devices in Youtube\\nvideo or blog post because it's not affordable to me.\"), mdx(\"p\", null, \"But, I was thinking about to create a command-line tool (CLI) for Unix and\\nLinux to scraper date from all Australia tech-sell pages such as Office works,\\nJB Hi-Fi, Harvey Norman. My first idea is using a Python library for CLI\\nsort of \\\"argparse\\\", \\\"click\\\", \\\"fire\\\", etc.\"), mdx(\"p\", null, \"The command could be :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-Bash\"\n  }, \"NAME\\n  find-product -- find the price of a specific product\\nDESCRIPTION\\n  The find-product utility search in all\\n  pages that are listed in the config files\\n\\n  The options are as follows:\\n\\n  -name [name]\\n        The name of the product that I want to find.\\n\")), mdx(\"p\", null, \"This could be the first version of the description file in de CLI. The repository is in this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jadry92\"\n  }, \"link\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"August 22, 2019","title":"How to find the best price in tech gadgets in Australia's retail stores","folder":"blog"}}},
    "staticQueryHashes": []}