{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/Node-useful-libraries",
    "result": {"pageContext":{"slug":"notes/2021-18-10-node-lib-usefull/node-lib-useful","id":"08c85f7e-5d44-55d3-a7e2-1a227ad5c4a4","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Node useful libraries\",\n  \"date\": \"2021-10-18T00:00:00.000Z\",\n  \"folder\": \"blog\",\n  \"published\": true,\n  \"description\": \"This post contain useful libraries that I got recommended in courser/post/videos.\",\n  \"progress\": 100\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This post contain useful libraries that I got recommended in courser/post/videos.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/bcrypt\"\n  }, \"bcrypt.js\"))), mdx(\"p\", null, \"This is a library to manage all crypto for passwords. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Bcrypt\"\n  }, \"wiki\")), mdx(\"p\", null, \"To install with npm:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i bcrypt\\n\")), mdx(\"p\", null, \"a basic use with node 12.xx could be:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const bcrypt = require('bcrypt');\\n\\nconst saltRounds = 10;\\nconst myPlaintextPassword = 'bla1234!D';\\nconst otherPlaintextPassword = 'not_bacon';\\n\\nasync function savePassword(saltRounds, plaintextPassword) {\\n  const salt = await bcrypt.genSalt(saltRounds);\\n  const hashPassword = await bcrypt.hash(myPlaintextPassword, salt);\\n  // await saveInDataBase(hashPassword)\\n}\\n\\nsavePassword(saltRounds, myPlaintextPassword);\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://momentjs.com\"\n  }, \"moment.js\"))), mdx(\"p\", null, \"Moment.js it's a library to manege date in easy way.\"), mdx(\"p\", null, \"To install moment.js\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install moment\\n\")), mdx(\"p\", null, \"moment.js give us a unique object to manipulate/show/parser dates, for example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const moment = require('moment');\\n\\nconst today = moment();\\n\\nconsole.log(today.format('Do - MMMM'));\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/sharp\"\n  }, \"sharp.js\"))), mdx(\"p\", null, \"sharp.js is a optimize library to manipulate with images (png/jpeg).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i sharp\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const sharp = require('sharp');\\n\\n\\nsharp(inputBuffer)\\n  .resize(320, 240)\\n  .toFile('output.webp', (err, info) => { ... });\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"October 18, 2021","title":"Node useful libraries","folder":"blog"}}},
    "staticQueryHashes": []}