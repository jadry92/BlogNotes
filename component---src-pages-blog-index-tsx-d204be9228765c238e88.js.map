{"version":3,"file":"component---src-pages-blog-index-tsx-d204be9228765c238e88.js","mappings":"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","sources":["webpack://blog/./src/components/BlogCard/index.tsx","webpack://blog/./src/components/Footer/index.tsx","webpack://blog/./src/components/Navbar/index.tsx","webpack://blog/./src/components/BlogLayout/index.tsx","webpack://blog/./src/pages/blog/index.tsx","webpack://blog/./src/utils/serializers.ts"],"sourcesContent":["import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { progressSerializer, createURL, thumbnailPath } from '../../utils/serializers'\nimport { StaticImage } from \"gatsby-plugin-image\"\n\ninterface IProps {\n  blog: {\n    title: string;\n    date: string;\n    description: string;\n    folder: string;\n    progress: number;\n    thumbnail: string;\n  }\n}\n\nconst BlogCard = ({ blog }: IProps) => { \n  const image = '../../../static/images/JavaScript_logo_2.png'\n  const progressObj =  progressSerializer(blog.progress)\n\n  return (\n    <div className=\"card mb-3 bg-color-3 px-1 text-white\" >\n      <div className=\"row\">\n        <div className=\"col-md-4 col-12 d-flex justify-content-center\">\n          <StaticImage \n            width={130}\n            height={130}\n            placeholder=\"blurred\"\n            src={image} \n            alt=\"blogImage\"\n            className='align-self-center m-5'\n          />\n        </div>\n        <div className=\"col-md-8 col-15\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-center\">{blog.title}</h5>\n            <p className=\"card-text\">{blog.description}</p>\n            <p className=\"card-text\"><small className=\"text-white-50\">{blog.date}</small></p>\n            <div className=\"d-flex justify-content-end\">\n              <span className={`align-self-end badge rounded-pill ${progressObj.color}`}>{progressObj.wLevel}</span>\n            </div>\n            <Link className='stretched-link' to={createURL(blog.folder, blog.title)}></Link>\n          </div>\n        </div>\n      </div>\n    </div>  \n  )\n}\n\nexport default BlogCard","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () : JSX.Element => {\n  return (\n    <footer className='footer mt-auto py-3 bg-color-4'>\n      <div className=\"container\">\n        <div className=\"text-light\">\n          <p> Contact me on <a href=\"https://www.linkedin.com/in/johan-suarez-largo-a9980499/\">Linkedin</a> and <a href=\"mailto:johan@blognotes.dev\">mail</a></p>\n        </div>\n        <div className=\"text-light\">\n          <p> You can find my thoughts <Link to='/blog'>Blog</Link></p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import { Link } from 'gatsby'\nimport React from 'react'\n\ninterface IProps {\n  urlRedirect : string;\n}\n\nconst Navbar = ({urlRedirect} : IProps) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <Link to={urlRedirect} className=\"navbar-brand\">BlogNotes.dev</Link>\n        <form className=\"d-flex\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        </form>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar","import React from 'react'\nimport Footer from '../Footer'\nimport Navbar from '../Navbar'\n\ninterface IProps {\n  children: React.ReactChild | React.ReactChild[] | JSX.Element[]\n}\n\nconst BlogLayout = ({children} : IProps) => {\n  return (\n    <main className=\"bg-color-5\">\n      <Navbar urlRedirect='/blog'/>\n      <section className='container'>\n        <div className='row text-center my-4'>\n          <h1 className='display-3 blog-title'>Blog</h1>\n        </div>\n        <div className=\"container\">\n          {children}\n        </div>        \n      </section>\n      <Footer/>\n    </main>\n  )\n}\n\nexport default BlogLayout","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport BlogLayout from '../../components/BlogLayout';\nimport { progressSerializer, createURL } from '../../utils/serializers'\nimport BlogCard from '../../components/BlogCard';\n\nexport const query = graphql`\n  query GET_ALL_POSTS {\n    allMdx(\n      filter: {frontmatter: {folder: {eq: \"blog\"}, published: {eq: true}}}\n      sort: {fields: frontmatter___date, order: DESC}\n      ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n          folder\n          progress\n        }\n        slug\n        id\n      }\n    }\n  }\n`\n\ninterface Inode {\n  id : string;\n  frontmatter : { \n    title: string;\n    date: string;\n    description: string;\n    folder: string;\n    progress: number;\n  }\n}\n\ninterface IData {\n  allMdx : { \n    nodes : Inode[];\n  }\n}\n\n\nconst BlogPage = ({ data } : {data : IData}) => {\n\n  return (\n    <BlogLayout>\n      {\n        data.allMdx.nodes.map((node) => (   \n          <BlogCard key={node.id} \n            blog={{\n              title: node.frontmatter.title,\n              date: node.frontmatter.date,\n              description: node.frontmatter.description,\n              folder: node.frontmatter.folder,\n              progress: node.frontmatter.progress\n            }}\n          />\n        ))\n      }\n    </BlogLayout>\n  )\n}\n\nexport default BlogPage","\ninterface progressReturn {\n  color : string;\n  nLevel : number;\n  wLevel: string;\n  progress: number;\n}\n\nfunction progressSerializer(progress: number): progressReturn {\n\n  let respond = {\n    color : '',\n    nLevel : 0,\n    wLevel: '',\n    progress: 0,\n  }\n\n  if (progress >= 0  && progress < 25) {\n    respond.color = 'bg-secondary'\n    respond.nLevel = 0\n    respond.wLevel = 'raw'\n    respond.progress = progress\n  } else if (progress >= 25  && progress < 50) {\n    respond.color = 'bg-danger'\n    respond.nLevel = 25\n    respond.wLevel = 'basic'\n    respond.progress = progress\n  } else if (progress >= 50  && progress < 75) {\n    respond.color = 'bg-warning'\n    respond.nLevel = 50\n    respond.wLevel = 'middle'\n    respond.progress = progress\n  } else if (progress >= 75  && progress < 100) {\n    respond.color = 'bg-primary'\n    respond.nLevel = 75\n    respond.wLevel = 'advance'\n    respond.progress = progress\n  } else if (progress === 100) {\n    respond.color = 'bg-success'\n    respond.nLevel = 100\n    respond.wLevel = 'done'\n    respond.progress = progress\n  }\n\n\n  return respond\n}\n\nfunction createURL(folder: string, title: string): string {\n  return `/${folder}/${title.replace(/ /g,'-')}`\n} \n\nfunction thumbnailPath(name: string ): string {\n  let respond = ''\n  if (name === 'js') {\n    respond = '../../../static/images/JavaScript_logo_2.png'\n  } else if ( name === 'python') {\n    respond = '../../../static/images/logoBn.png'\n  }\n  return respond\n}\n\nexport { progressSerializer, createURL, thumbnailPath }"],"names":["blog","progressObj","progressSerializer","progress","React","className","StaticImage","width","height","placeholder","src","alt","title","description","date","color","wLevel","Link","to","createURL","folder","href","urlRedirect","type","children","Navbar","Footer","data","BlogLayout","allMdx","nodes","map","node","BlogCard","key","id","frontmatter","respond","nLevel","replace"],"sourceRoot":""}